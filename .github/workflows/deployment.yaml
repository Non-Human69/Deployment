name: Laravel

on:
  push:
    branches: [ "Test1-01" ]
  pull_request:
    branches: [ "Test1-01" ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        coverage: none

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Set SQLite for CI
      run: |
        sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=sqlite/' .env
        sed -i 's/^DB_DATABASE=.*/DB_DATABASE=database\/database.sqlite/' .env

    - name: Install PHP dependencies
      run: composer install --no-ansi --no-interaction --no-progress --prefer-dist

    - name: Install Node.js dependencies
      run: npm install

    - name: Build frontend assets
      run: npm run build

    - name: Generate Laravel application key
      run: php artisan key:generate

    - name: Set directory permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create SQLite database file
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run seeders
      run: php artisan db:seed --force

    - name: Laravel Pint code style check
      run: ./vendor/bin/pint

    - name: Run Laravel tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

    - name: Optimize Laravel for production
      run: |
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/deployment:latest
